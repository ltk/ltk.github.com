{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Kurtz's Code","body":"## About Me\r\nI first touched HTML a little over two years ago. Since then, I’ve mastered HTML, CSS, Javascript, PHP, and MySQL. I’ve now worked for a full year as a professional PHP developer, specializing in web application development in CakePHP and custom WordPress development. I learned Ruby on Rails development from the Facebookers and Grouponers at Bloc.io, and have a solid familiarity with good database design. In my spare time, I write [web applications to help teachers](http://ca2plus.com/checkmate/), play with [machine learning algorithms](https://www.coursera.org/user/i/b3515012aec7e97757bac36d6dbf5dfe) in Octave, and toy with Java, Unix, and Node.\r\n\r\n## Some Apps I've Been Working On\r\n\r\n# [Checkmate](http://lkurtz.com/checkmate/)\r\n### A primary and secondary school culture management web application.\r\nI have been running this application as SaaS for just over one full year for a number of schools in the [KIPP Charter School network](http://www.kipp.org/). While the original version was built in PHP, I'm 90% done with Checkmate 2.0, built in Ruby on Rails.\r\n\r\n# [Here Pretty Kitty](http://hereprettykitty.com/)\r\n### A feline rating application\r\n\r\n# [Blue Igloo Admissions](http://www.blueiglooplaygroup.com/admissions/)\r\n### A fully integrated admissions application, tuition payment portal, member intranet, and marketing website\r\n\r\n# [Colonial Parking Client Center](http://www.ecolonial.com/client-center/)\r\n### A parking lot administration management web application\r\n\r\n# [Inspire](http://jakedevelopment.com/inspire/)\r\n### A collaborative visual bookmarking application with JS bookmarklet\r\n\r\n# Krazy Connect\r\n### An SMS crowd unification web application for Duke University basketball fans\r\n\r\n# Signing Day Live\r\n### A live broadcast page integrating a Ustream video feed, Google Wallet donations, and live updating donation totals and viewer comments\r\n\r\n## On Tinkering\r\nI find it strangely exhilarating to start a project with only an idea, and no clue how to actually build it. My first web significant web project started in this manner just a year ago. With only a rudimentary understanding of PHP, I committed to developing a complete web application for a senior research course. When I began, I had never studied or worked with object-oriented code, but a quick trip to PHP.net and the purchase of a cheap espresso maker were all I needed to get started. I wrote my first class definition (absolutely incorrectly), refined it, refined it some more, and pretty soon I actually had some working code. At every corner there were new things to learn. I setup my first non-WordPress database in MySQL, and hand coded my SQL statements. Then learned about SQL injection. Then recoded all my SQL statements. I built an interactive front end admin panel for the app using vanilla JavaScript, not because I was philosophically opposed to JS libraries (the bloat!), but because I didn’t know what they were. Then when a read about jQuery, I reconsidered my life, and refactored (read: started from scratch) my entire front end. And then, after the web application was complete, and after beta testing had begun, I learned about web application frameworks. Sigh.\r\n\r\nI’ve come to accept that as a new web developer, you will never escape the feeling of dissatisfaction with the work that you have just finished. You learn so much during the process of completing a project that you can’t help but view it as obsolete in the end. I’m constantly plagued by the desire to refactor, and refactor some more, and then refactor that refactoring. It’s a vicious cycle, albeit an education one, and one I’m totally addicted to.","google":"UA-34912579-1","tagline":"A smattering of JS, Ruby and PHP"}